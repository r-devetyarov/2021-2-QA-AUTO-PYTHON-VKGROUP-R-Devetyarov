version: "2.1"

networks:
  my_networks:
    external:
      name: selenoid

services:
  percona:
    networks:
      - my_networks
    image: "percona:5.7"
    container_name: "percona"
    environment:
      MYSQL_ROOT_PASSWORD: pass
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "-uroot", "-ppass", "ping", "-h", "percona"]
      timeout: 1s
      retries: 30

  application:
    networks:
      - my_networks
    image: "myapp:latest"
    container_name: "application"
    tty: true
    volumes:
      - ./myapp_conf:/tmp/myappconf
    ports:
     - "8079:8079"
    depends_on:
      percona:
        condition: service_healthy
      vk_mock:
        condition: service_started
    command: /app/myapp --config=/tmp/myappconf

  myapp_proxy:
    image: "nginx:stable"
    container_name: "myapp_proxy"
    volumes:
      - ./myapp_proxy/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - my_networks
    ports:
      - "8070:8070"
    depends_on:
      application:
        condition: service_started

  vk_mock:
    networks:
      - my_networks
    build: ../vk_api_mock/
    container_name: "vk_mock"
    ports:
      - "5000:5000"

  tests:
    networks:
      - my_networks
    build: ../../
    container_name: "tests"
    tty: true
    volumes:
      - ../../code:/src
      - "${WORKSPACE}/alluredir:/tmp/allure"
    working_dir: /src
    environment:
      - MARKS=API
      - THREADS=4
    entrypoint: /bin/bash /src/tests/start_tests.sh
    depends_on:
      application:
        condition: service_started
      percona:
        condition: service_healthy
      vk_mock:
        condition: service_started

  selenoid:
    image: aerokube/selenoid:latest-release
    container_name: "selenoid"
    networks:
      - my_networks
    volumes:
#      - ./selenoid:/selenoid
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ./selenoid/video:/opt/selenoid/video
#      - ./selenoid/logs:/opt/selenoid/logs
#    command: ["-conf", "/etc/selenoid/browsers.json", "-video-output-dir", "/opt/selenoid/video", "-log-output-dir", "/opt/selenoid/logs", "-container-network", "selenoid"]
    command: ["-container-network", "selenoid"]
    ports:
      - "4444:4444"

  selenoid-ui:
    image: aerokube/selenoid-ui
    container_name: "selenoid-ui"
    networks:
      - my_networks
    ports:
      - "8080:8080"
    command: ["--selenoid-uri","http://selenoid:4444"]

